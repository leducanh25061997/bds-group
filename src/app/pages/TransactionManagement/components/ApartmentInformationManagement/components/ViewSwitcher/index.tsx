import { Box, SvgIcon, SvgIconProps } from '@mui/material';
import React, { useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { ProjectTypeEnum } from 'types/Project';
import { selectTransactionManagement } from 'app/pages/TransactionManagement/slice/selector';
import { useTransactionManagementSlice } from 'app/pages/TransactionManagement/slice';

import { selectApartmentInformation } from '../../slice/selectors';

interface ViewSwitcherProps {
  type: ProjectTypeEnum;
}

const ViewSwitcher: React.FC<ViewSwitcherProps> = ({ type }) => {
  const dispatch = useDispatch();
  const { isDetail } = useSelector(selectTransactionManagement);
  const { actions } = useTransactionManagementSlice();

  return (
    <Box
      sx={{
        borderRadius: 0.5,
        border: '1px solid #AFAFAF',
        display: 'flex',
        alignItems: 'center',
        alignSelf: 'center',
        height: '30px',
        overflow: 'hidden',
        cursor: 'pointer',
      }}
    >
      <Box
        sx={{
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          width: '38px',
          height: '100%',
          backgroundColor: isDetail ? '#FDEAF4' : 'transparent',
        }}
        onClick={() => dispatch(actions.changeView(true))}
      >
        <GridIcon
          sx={{
            color: isDetail ? 'primary.darkRed' : '#1E1E1E',
            '& rect': {
              fill: isDetail ? '#F7ACD5' : 'none',
            },
          }}
        />
      </Box>
      <Box
        sx={{
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          width: '38px',
          height: '100%',
          backgroundColor: !isDetail ? '#FDEAF4' : 'transparent',
        }}
        onClick={() => dispatch(actions.changeView(false))}
      >
        {type === ProjectTypeEnum.GROUND ? (
          <GroundIcon
            sx={{
              width: '23px',

              '& path:first-of-type': {
                fill: !isDetail ? '#F7ACD5' : 'white',
              },

              '& path:nth-of-type(2)': {
                fill: !isDetail ? '#D6465F' : '#1E1E1E',
              },
            }}
          />
        ) : (
          <DetailIcon
            sx={{
              '& rect': {
                fill: !isDetail ? '#F7ACD5' : 'none',
              },
              '& path:first-of-type': {
                fill: !isDetail ? '#D6465F' : 'black',
              },

              '& path:nth-of-type(2)': {
                fill: !isDetail ? '#D6465F' : 'black',
              },
            }}
          />
        )}
      </Box>
    </Box>
  );
};

const GridIcon = (props: SvgIconProps) => {
  return (
    <SvgIcon {...props} fontSize="small" viewBox="0 0 20 20">
      <rect
        x="0.85"
        y="0.85"
        width="7.3"
        height="7.3"
        rx="1.15"
        stroke="currentColor"
        strokeWidth="1.7"
      />
      <rect
        x="0.85"
        y="11.85"
        width="7.3"
        height="7.3"
        rx="1.15"
        stroke="currentColor"
        strokeWidth="1.7"
      />
      <rect
        x="11.85"
        y="0.85"
        width="7.3"
        height="7.3"
        rx="1.15"
        stroke="currentColor"
        strokeWidth="1.7"
      />
      <rect
        x="11.85"
        y="11.85"
        width="7.3"
        height="7.3"
        rx="1.15"
        stroke="currentColor"
        strokeWidth="1.7"
      />
    </SvgIcon>
  );
};

const GroundIcon = (props: SvgIconProps) => {
  return (
    <SvgIcon {...props} fontSize="small" viewBox="0 0 23 20">
      <path d="M1.5 3.5L6.5 1L11 3.5L14 2.5L21 6.5L14.5 10.5L20.5 14L11.5 19L2 13.5L10 8.5L1.5 3.5Z" />
      <path d="M22.4024 6.24068C22.3992 6.22964 22.3924 6.21966 22.3897 6.20862C22.3737 6.15784 22.3524 6.10888 22.3262 6.06253C22.3262 6.06043 22.3251 6.05885 22.3241 6.05728C22.3141 6.04098 22.3025 6.02732 22.2915 6.01103C22.2678 5.97425 22.2442 5.93641 22.2163 5.90278C22.1953 5.8786 22.1711 5.85811 22.1485 5.83604C22.1259 5.81397 22.1044 5.79032 22.0786 5.76982C22.0461 5.74302 22.0077 5.72148 21.973 5.69993C21.9557 5.68942 21.9404 5.67628 21.9226 5.66682L14.1572 1.60466C14.0199 1.53304 13.8676 1.49494 13.7128 1.49348C13.558 1.49202 13.405 1.52724 13.2664 1.59625L11.5501 2.45546L6.78799 0.101715C6.64879 0.0326556 6.4951 -0.00217943 6.33972 0.000105579C6.18434 0.00239059 6.03175 0.0417297 5.89463 0.114853L0.518708 2.98254C0.360423 3.06667 0.228321 3.1927 0.136848 3.34685C0.0453746 3.50101 -0.00194593 3.67735 6.13021e-05 3.85659C0.00206854 4.03583 0.0533263 4.21107 0.148229 4.36314C0.243131 4.51521 0.378023 4.63825 0.538151 4.71881L8.69295 8.83352L1.05157 12.9603C1.0337 12.9708 1.01951 12.9829 1.00217 12.9929C0.965388 13.0155 0.928077 13.0376 0.89497 13.0665C0.868695 13.088 0.847149 13.1127 0.823501 13.1364C0.801955 13.1595 0.779359 13.1784 0.759915 13.2021C0.731343 13.2385 0.705689 13.2772 0.683191 13.3177C0.673732 13.3313 0.662696 13.345 0.654288 13.3602L0.652186 13.3639C0.625212 13.4168 0.602542 13.4718 0.584396 13.5284C0.573886 13.562 0.568105 13.5983 0.560748 13.6319C0.554968 13.6645 0.546559 13.6945 0.542881 13.7276C0.539202 13.7622 0.542355 13.7985 0.542355 13.8321C0.542881 13.8621 0.540253 13.8884 0.542881 13.9183C0.54761 13.9625 0.558121 14.0045 0.568631 14.0486C0.57336 14.066 0.574411 14.0849 0.579666 14.1033C0.599553 14.166 0.624873 14.2268 0.655339 14.2851C0.657967 14.2899 0.661645 14.292 0.663222 14.2962C0.742295 14.4354 0.853675 14.5537 0.987985 14.6409C1.00428 14.6519 1.02004 14.6635 1.03738 14.6735C1.04369 14.6766 1.04842 14.6829 1.05472 14.6845L10.7619 19.8833C10.8039 19.9059 10.8486 19.917 10.8917 19.9343C10.9195 19.9448 10.9458 19.958 10.9742 19.9664C11.0562 19.9879 11.1397 20 11.2222 20H11.2243C11.3031 20 11.3856 19.989 11.4655 19.9674C11.4923 19.9611 11.517 19.949 11.5422 19.9385C11.5832 19.9259 11.6253 19.9133 11.6652 19.8938L21.3119 14.9956C21.4264 14.9374 21.5283 14.8573 21.6118 14.7597C21.6953 14.6621 21.7587 14.549 21.7984 14.4269C21.8382 14.3048 21.8534 14.176 21.8433 14.048C21.8333 13.92 21.798 13.7952 21.7397 13.6808C21.7287 13.6582 21.7124 13.6398 21.6998 13.6183C21.67 13.4759 21.6087 13.342 21.5202 13.2265C21.4318 13.111 21.3186 13.0168 21.189 12.9509L16.3464 10.5083L21.9268 7.39889L21.9331 7.39574L21.9431 7.39101C21.9541 7.38313 21.9657 7.37367 21.9772 7.36579C22.0187 7.34008 22.0588 7.31237 22.0976 7.28275C22.1191 7.26489 22.1359 7.24229 22.1564 7.2218C22.1822 7.1971 22.2084 7.17398 22.23 7.14665C22.2557 7.11302 22.2773 7.07781 22.2988 7.04207C22.3093 7.02421 22.3225 7.00949 22.3314 6.99005L22.3335 6.98479C22.3566 6.94223 22.3714 6.89756 22.3882 6.85184C22.4259 6.73915 22.4434 6.62064 22.4397 6.50185C22.4397 6.4761 22.4428 6.4514 22.4397 6.42723C22.4338 6.36391 22.4213 6.30137 22.4024 6.24068ZM3.10367 3.82125L6.37337 2.07762L9.46965 3.60789L6.27983 5.42404L3.10367 3.82125ZM18.9414 14.004L11.2364 17.9158L3.58293 13.8174L10.8223 9.90661L18.9414 14.004ZM14.2418 9.44101L11.2601 7.93754L8.37555 6.48188L12.0152 4.41034L13.6921 3.57005L19.4101 6.56071L14.2418 9.44101Z" />
    </SvgIcon>
  );
};

const DetailIcon = (props: SvgIconProps) => {
  return (
    <SvgIcon {...props} fontSize="small" viewBox="0 0 20 20">
      <rect x="1" y="1" width="18" height="18" rx="4" />
      <path d="M15.2288 7.78688H10.3451C9.96371 7.78688 9.64743 7.4706 9.64743 7.08921C9.64743 6.70781 9.96371 6.39153 10.3451 6.39153H15.2288C15.4139 6.39153 15.5913 6.46504 15.7222 6.59588C15.853 6.72672 15.9265 6.90417 15.9265 7.08921C15.9265 7.27424 15.853 7.4517 15.7222 7.58254C15.5913 7.71338 15.4139 7.78688 15.2288 7.78688ZM5.46138 8.49386C5.28464 8.49386 5.10789 8.42874 4.96836 8.28921L4.27068 7.59153C4.00092 7.32177 4.00092 6.87525 4.27068 6.60549C4.54045 6.33572 4.98696 6.33572 5.25673 6.60549L5.46138 6.81014L7.06138 5.21014C7.33115 4.94037 7.77766 4.94037 8.04743 5.21014C8.3172 5.47991 8.3172 5.92642 8.04743 6.19618L5.95441 8.28921C5.82369 8.42008 5.64635 8.4937 5.46138 8.49386ZM15.2288 14.2985H10.3451C9.96371 14.2985 9.64743 13.9822 9.64743 13.6008C9.64743 13.2194 9.96371 12.9032 10.3451 12.9032H15.2288C15.4139 12.9032 15.5913 12.9767 15.7222 13.1075C15.853 13.2383 15.9265 13.4158 15.9265 13.6008C15.9265 13.7859 15.853 13.9633 15.7222 14.0942C15.5913 14.225 15.4139 14.2985 15.2288 14.2985ZM5.46138 15.0055C5.28464 15.0055 5.10789 14.9404 4.96836 14.8008L4.27068 14.1032C4.00092 13.8334 4.00092 13.3869 4.27068 13.1171C4.54045 12.8473 4.98696 12.8473 5.25673 13.1171L5.46138 13.3218L7.06138 11.7218C7.33115 11.452 7.77766 11.452 8.04743 11.7218C8.3172 11.9915 8.3172 12.438 8.04743 12.7078L5.95441 14.8008C5.82369 14.9317 5.64635 15.0053 5.46138 15.0055Z" />
      <path d="M12.7907 20H7.2093C2.15814 20 0 17.8419 0 12.7907V7.2093C0 2.15814 2.15814 0 7.2093 0H12.7907C17.8419 0 20 2.15814 20 7.2093V12.7907C20 17.8419 17.8419 20 12.7907 20ZM7.2093 1.39535C2.92093 1.39535 1.39535 2.92093 1.39535 7.2093V12.7907C1.39535 17.0791 2.92093 18.6047 7.2093 18.6047H12.7907C17.0791 18.6047 18.6047 17.0791 18.6047 12.7907V7.2093C18.6047 2.92093 17.0791 1.39535 12.7907 1.39535H7.2093Z" />
    </SvgIcon>
  );
};

export default ViewSwitcher;
