# Declare the base image
FROM node:16.19.1-alpine as cache-image
# Build step
# 1. copy package.json and package-lock.json to /app dir
RUN mkdir /app
COPY package*.json /app
# 2. Change working directory to newly created app dir
WORKDIR /app
# 3 . Install dependencies
RUN yarn

FROM cache-image as builder
WORKDIR /app
COPY . .
RUN yarn build

# PROD environment
# Create image based on the official NGINX image from dockerhub
FROM nginx:alpine as deploy-image
# Get all the builded code to root folder
COPY --from=builder /app/build /usr/share/nginx/html

# Copy nginx template to container
COPY --from=builder /app/nginx/nginx.conf /etc/nginx/nginx.conf
COPY --from=builder /app/nginx/default.conf /etc/nginx/conf.d/default.conf

## Serve the app
CMD [ "nginx", "-g", "daemon off;" ]
